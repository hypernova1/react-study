{"ast":null,"code":"var _jsxFileName = \"/Users/melchor/dev/Git/react-study/movie-app-2019-2/src/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //state는 직접 변경하면 안 됨\n      isLoading: true,\n      movies: [],\n      count: 0\n    };\n\n    this.add = () => {\n      this.setState(current => ({\n        count: current.count + 1\n      }));\n    };\n\n    this.minus = () => {\n      this.setState(current => ({\n        count: current.count - 1\n      }));\n    };\n\n    this.getMovies = async () => {\n      const movies = await axios.get('https://yts-proxy.now.sh/list_movies.json');\n      console.log(movies.data.data.movies);\n    };\n\n    console.log(\"constructor\");\n  }\n\n  componentDidMount() {\n    //렌더링이 완료되고 호출\n    console.log(\"component rendered\");\n    this.getMovies();\n  }\n\n  componentDidUpdate() {\n    console.log(\"component updated\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"component will unmounted\");\n  }\n\n  render() {\n    //리액트는 자동으로 클래스 컴포넌트의 render 함수를 실행한다.\n    console.log(\"render\");\n    const isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, isLoading ? \"Loading...\" : \"We are ready\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"The number is \", this.state.count), React.createElement(\"button\", {\n      onClick: this.add,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"button\", {\n      onClick: this.minus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Minus\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/melchor/dev/Git/react-study/movie-app-2019-2/src/App.js"],"names":["React","PropTypes","axios","App","Component","constructor","props","state","isLoading","movies","count","add","setState","current","minus","getMovies","get","console","log","data","componentDidMount","componentDidUpdate","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAKnBC,KALmB,GAKX;AAAE;AACRC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,KAAK,EAAE;AAHD,KALW;;AAAA,SAWnBC,GAXmB,GAWb,MAAM;AACV,WAAKC,QAAL,CAAcC,OAAO,KAAK;AAAEH,QAAAA,KAAK,EAAEG,OAAO,CAACH,KAAR,GAAgB;AAAzB,OAAL,CAArB;AACD,KAbkB;;AAAA,SAenBI,KAfmB,GAeX,MAAM;AACZ,WAAKF,QAAL,CAAcC,OAAO,KAAK;AAAEH,QAAAA,KAAK,EAAEG,OAAO,CAACH,KAAR,GAAgB;AAAzB,OAAL,CAArB;AACD,KAjBkB;;AAAA,SAmBnBK,SAnBmB,GAmBP,YAAW;AACrB,YAAMN,MAAM,GAAG,MAAMP,KAAK,CAACc,GAAN,CAAU,2CAAV,CAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACU,IAAP,CAAYA,IAAZ,CAAiBV,MAA7B;AACD,KAtBkB;;AAEjBQ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;;AAqBDE,EAAAA,iBAAiB,GAAG;AAAE;AACpBH,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,SAAKH,SAAL;AAED;;AAEDM,EAAAA,kBAAkB,GAAG;AACnBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;;AAEDI,EAAAA,oBAAoB,GAAG;AACrBL,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;;AAEDK,EAAAA,MAAM,GAAG;AAAE;AACTN,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AADO,UAECV,SAFD,GAEe,KAAKD,KAFpB,CAECC,SAFD;AAGP,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,SAAS,GAAG,YAAH,GAAkB,cAAjC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKD,KAAL,CAAWG,KAA9B,CAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKG,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CADA;AASD;;AApD+B;;AAuDlC,eAAeX,GAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    console.log(\"constructor\");\n  }\n\n  state = { //state는 직접 변경하면 안 됨\n    isLoading: true,\n    movies: [],\n    count: 0\n  };\n\n  add = () => {\n    this.setState(current => ({ count: current.count + 1 }));\n  }\n\n  minus = () => {\n    this.setState(current => ({ count: current.count - 1 }));\n  }\n\n  getMovies = async() => {\n    const movies = await axios.get('https://yts-proxy.now.sh/list_movies.json');\n    console.log(movies.data.data.movies)\n  }\n\n  componentDidMount() { //렌더링이 완료되고 호출\n    console.log(\"component rendered\");\n    this.getMovies();\n\n  }\n\n  componentDidUpdate() {\n    console.log(\"component updated\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"component will unmounted\");\n  }\n\n  render() { //리액트는 자동으로 클래스 컴포넌트의 render 함수를 실행한다.\n    console.log(\"render\");\n    const { isLoading } = this.state;\n    return (\n    <div>\n      <div>{isLoading ? \"Loading...\" : \"We are ready\"}</div>\n      <h1>The number is {this.state.count}</h1>\n      <button onClick={this.add}>Add</button>\n      <button onClick={this.minus}>Minus</button>\n    </div>\n    \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}